[{"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\index.js":"1","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\reportWebVitals.js":"2","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\App.js":"3","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Profile\\Profile.js":"4","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Header\\Header.js":"5","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\pages\\Portfolio\\Portfolio.js":"6","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\pages\\Resume\\Resume.js":"7","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Footer\\Footer.js":"8","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\CustomTimeline\\CustomTimeline.js":"9","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\utils\\resumeData.js":"10","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\CustomButton\\CustomButton.js":"11","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\ScrollToTop\\ScrollToTop.js":"12"},{"size":500,"mtime":1607263559263,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1247,"mtime":1607274595526,"results":"16","hashOfConfig":"14"},{"size":2370,"mtime":1607458547984,"results":"17","hashOfConfig":"14"},{"size":2034,"mtime":1607458528192,"results":"18","hashOfConfig":"14"},{"size":4110,"mtime":1607458269653,"results":"19","hashOfConfig":"14"},{"size":8793,"mtime":1607458574164,"results":"20","hashOfConfig":"14"},{"size":1227,"mtime":1607293412720,"results":"21","hashOfConfig":"14"},{"size":1336,"mtime":1606925475492,"results":"22","hashOfConfig":"14"},{"size":14956,"mtime":1607463840967,"results":"23","hashOfConfig":"14"},{"size":394,"mtime":1607083534368,"results":"24","hashOfConfig":"14"},{"size":479,"mtime":1607292888738,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"f21uxg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\index.js",[],["56","57"],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\reportWebVitals.js",[],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\App.js",[],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Profile\\Profile.js",["58"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CustomTimeline, {\r\n  CustomTimelineSeperator,\r\n} from \"../CustomTimeline/CustomTimeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport irad from \"../../assets/images/irad.jpg\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Profile.css\";\r\n\r\nconst CustomTimelineItem = ({ title, text, link }) => (\r\n  <TimelineItem>\r\n    <CustomTimelineSeperator />\r\n    <TimelineContent>\r\n      {link ? (\r\n        <Typography className={\"timelineItem_text\"}>\r\n          <span>{title}: </span>{\" \"}\r\n          <a href={link} target=\"_blank\">\r\n            {text}\r\n          </a>\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={\"timelineItem_text\"}>\r\n          <span>{title}: </span>\r\n          {text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n);\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div className=\"profile container_shadow fixed\">\r\n      <div className=\"profile_name\">\r\n        <Typography className=\"name\">{resumeData.name}</Typography>\r\n        <Typography className=\"title\">{resumeData.title}</Typography>\r\n      </div>\r\n\r\n      <figure className=\"profile_image\">\r\n        <img src={irad} alt=\"irad\" />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeline icon={<PersonOutlineIcon />}>\r\n          <CustomTimelineItem title=\"Birthday\" text={resumeData.birthday} />\r\n          <a href={`mailto:${resumeData.email}?subject=\"Working Purposes\"}`}>\r\n            <CustomTimelineItem title=\"Email\" text={resumeData.email} />\r\n          </a>\r\n\r\n          <CustomTimelineItem title=\"Address\" text={resumeData.address} />\r\n          <CustomTimelineItem title=\"Phone\" text={resumeData.phone} />\r\n        </CustomTimeline>\r\n        <div className={\"button_container\"}>\r\n          <a href=\"https://drive.google.com/uc?export=download&id=1VRljVj6XuaEdGHwRQKtO_YtNWabW8pkG\">\r\n            <CustomButton text={\"Download CV\"} icon={<GetAppIcon />} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Header\\Header.js",["59","60","61","62","63","64","65","66","67"],"import React from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HomeRounded, Telegram } from \"@material-ui/icons\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header({ props }) {\r\n  const pathName = props?.location?.pathname;\r\n\r\n  return (\r\n    <Navbar expand={\"lg\"} sticky={\"top\"} className={\"header\"}>\r\n      {/* Home Link */}\r\n      <Nav.Link as={NavLink} to={\"/\"} className={\"header_navlink\"}>\r\n        <Navbar.Brand className={\"header_home\"}>\r\n          <HomeRounded />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n      <Navbar.Toggle />\r\n\r\n      <Navbar.Collapse>\r\n        <Nav className=\"header_left\">\r\n          {/* Resume Link */}\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to={\"/\"}\r\n            className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}\r\n          >\r\n            Resume\r\n          </Nav.Link>\r\n\r\n          {/* Portfolio Link */}\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to={\"/portfolio\"}\r\n            className={\r\n              pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"\r\n            }\r\n          >\r\n            Portfolio\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <div className=\"header_right\">\r\n          {Object.keys(resumeData.socials).map((key) => (\r\n            <a href={resumeData.socials[key].link} target={\"_blank\"}>\r\n              {resumeData.socials[key].icon}\r\n            </a>\r\n          ))}\r\n          <a\r\n            className={\"hireme_btn\"}\r\n            href={resumeData.socials.Telegram.link}\r\n            target={\"_blank\"}\r\n          >\r\n            <CustomButton text={\"Hire Me\"} icon={<Telegram />} />\r\n          </a>\r\n        </div>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\pages\\Portfolio\\Portfolio.js",["68","69","70"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grow,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Portfolio.css\";\r\n\r\nfunction Portfolio() {\r\n  const [tabValue, setTabValue] = useState(\"All\");\r\n  const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n  return (\r\n    <Grid container spacing={1} className={\"section pb_45 pt_45\"}>\r\n      {/* Title */}\r\n      <Grid item className=\"section_title mb_20\">\r\n        <span></span>\r\n        <h6 className=\"section_title_text\">Portfolio</h6>\r\n      </Grid>\r\n\r\n      {/* Tabs */}\r\n      <Grid item xs={12}>\r\n        <Tabs\r\n          value={tabValue}\r\n          indicatorColor={\"white\"}\r\n          className={\"customTabs\"}\r\n          onChange={(event, newValue) => setTabValue(newValue)}\r\n        >\r\n          <Tab\r\n            label={\"All\"}\r\n            value={\"All\"}\r\n            className={\r\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\r\n            }\r\n          />\r\n          {[...new Set(resumeData.projects.map((item) => item.tag))].map(\r\n            (tag) => (\r\n              <Tab\r\n                label={tag}\r\n                value={tag}\r\n                className={\r\n                  tabValue == tag ? \"customTabs_item active\" : \"customTabs_item\"\r\n                }\r\n              />\r\n            )\r\n          )}\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      {/* Projects */}\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          {resumeData.projects.map((project) => (\r\n            <>\r\n              {tabValue === project.tag || tabValue === \"All\" ? (\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Grow in timeout={1000}>\r\n                    <Card\r\n                      className={\"customCard\"}\r\n                      onClick={() => setProjectDialog(project)}\r\n                    >\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          className={\"customCard_image\"}\r\n                          image={project.image}\r\n                          title={project.title}\r\n                        />\r\n                        <CardContent>\r\n                          <Typography\r\n                            variant={\"body2\"}\r\n                            className={\"customCard_title\"}\r\n                          >\r\n                            {project.title}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant={\"caption\"}\r\n                            className={\"customCard_caption\"}\r\n                          >\r\n                            {project.caption}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grow>\r\n                </Grid>\r\n              ) : null}\r\n            </>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={projectDialog}\r\n        onClose={() => setProjectDialog(false)}\r\n        className={\"projectDialog\"}\r\n        fullWidth\r\n      >\r\n        <DialogTitle onClose={() => setProjectDialog(false)}>\r\n          {projectDialog.title}\r\n        </DialogTitle>\r\n        <img\r\n          src={projectDialog.image}\r\n          alt={\"\"}\r\n          className={\"projectDialog_image\"}\r\n        />\r\n        <DialogContent>\r\n          <Typography className={\"projectDialog_description\"}>\r\n            {projectDialog.description}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={\"projectDialog_actions\"}>\r\n          {projectDialog?.links?.map((link) => (\r\n            <a\r\n              href={link.link}\r\n              target={\"_blank\"}\r\n              className={\"projectDialog_icon\"}\r\n            >\r\n              {link.icon}\r\n            </a>\r\n          ))}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\pages\\Resume\\Resume.js",["71"],"import React from \"react\";\r\nimport { Grid, Typography, Icon, Paper, TextField } from \"@material-ui/core\";\r\nimport CustomTimeline, {\r\n  CustomTimelineSeperator,\r\n} from \"../../components/CustomTimeline/CustomTimeline\";\r\nimport { Work, School } from \"@material-ui/icons/\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport \"./Resume.css\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\nfunction Resume() {\r\n  return (\r\n    <>\r\n      {/* About me */}\r\n      <Grid container className={\"section pb_45 pt_45\"}>\r\n        <Grid item className={\"section_title mb_30\"}>\r\n          <span></span>\r\n          <h6 className={\"section_title_text\"}>About Me</h6>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant={\"body2\"} className={\"about_me_text\"}>\r\n            {resumeData.about_me}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Education and Experiences */}\r\n      <Grid container className=\"section pb_45\">\r\n        <Grid item className=\"section_title mb_30\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Resume</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container className=\"resume_timeline\">\r\n            {/* Experience */}\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline title={\"Work Experience\"} icon={<Work />}>\r\n                {resumeData.experiences.map((experience) => (\r\n                  <TimelineItem>\r\n                    <CustomTimelineSeperator />\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {experience.title}\r\n                      </Typography>\r\n                      <Typography variant={\"caption\"} className=\"timeline_date\">\r\n                        {experience.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant={\"body2\"}\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {experience.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n\r\n            {/* Education */}\r\n            <Grid item sm={12} md={6}>\r\n              <CustomTimeline title={\"Education\"} icon={<School />}>\r\n                {resumeData.educations.map((education) => (\r\n                  <TimelineItem>\r\n                    <CustomTimelineSeperator />\r\n                    <TimelineContent className=\"timeline_content\">\r\n                      <Typography className=\"timeline_title\">\r\n                        {education.title}\r\n                      </Typography>\r\n                      <Typography variant={\"caption\"} className=\"timeline_date\">\r\n                        {education.date}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant={\"body2\"}\r\n                        className=\"timeline_description\"\r\n                      >\r\n                        {education.description}\r\n                      </Typography>\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                ))}\r\n              </CustomTimeline>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Services */}\r\n      <Grid container className={\"section pb_45\"}>\r\n        <Grid item className={\"section_title mb_30\"}>\r\n          <span></span>\r\n          <h6 className={\"section_title_text\"}>My Services</h6>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={1} justify={\"space-around\"}>\r\n            {resumeData.services.map((service) => (\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper elevation={5} className={\"skill\"}>\r\n                  <div className=\"service\">\r\n                    <Icon className=\"service_icon\">{service.icon}</Icon>\r\n                    <Typography varian={\"h6\"} className={\"service_title\"}>\r\n                      {service.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant={\"body2\"}\r\n                      className={\"service_description\"}\r\n                    >\r\n                      {service.description}\r\n                    </Typography>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Skills */}\r\n      <Grid className={\"section graybg pb_45 p_50 pt_45\"}>\r\n        <Grid item xs={12}>\r\n          <Grid item className={\"section_title mb_30\"}>\r\n            <span></span>\r\n            <h6 className={\"section_title_text\"}>My Skills</h6>\r\n          </Grid>\r\n          <Grid container spacing={3} justify={\"space-between\"}>\r\n            {resumeData.skills.map((skill) => (\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Paper elevation={0} className={\"skill\"}>\r\n                  <Typography varian={\"h6\"} className={\"skill_title\"}>\r\n                    {skill.title}\r\n                  </Typography>\r\n                  {skill.description.map((element) => (\r\n                    <Typography\r\n                      variant={\"body2\"}\r\n                      className={\"skill_description\"}\r\n                    >\r\n                      <TimelineDot\r\n                        variant={\"outlined\"}\r\n                        className={\"timeline_dot\"}\r\n                      />\r\n                      {element}\r\n                    </Typography>\r\n                  ))}\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Contact */}\r\n      <Grid container spacing={5} className={\"section pt_45 pb_45\"}>\r\n        {/* Contact Form */}\r\n        <Grid item xs={12} lg={7}>\r\n          <Grid container>\r\n            <Grid item className={\"section_title mb_30\"}>\r\n              <span></span>\r\n              <h6 className={\"section_title_text\"}>Contact Form</h6>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"name\" label=\"Name\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"email\" label=\"E-mail\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"message\"\r\n                    label=\"Message\"\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <CustomButton text=\"Submit\"></CustomButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Contact Information */}\r\n        <Grid item xs={12} lg={5}>\r\n          <Grid container>\r\n            <Grid item className={\"section_title mb_30\"}>\r\n              <span></span>\r\n              <h6 className={\"section_title_text\"}>Contact Information</h6>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography className={\"contactInfo_item\"}>\r\n                    <span>Address: </span> {resumeData.address}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className={\"contactInfo_item\"}>\r\n                    <span>Phone: </span> {resumeData.phone}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className={\"contactInfo_item\"}>\r\n                    <span>E-mail: </span> {resumeData.email}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Grid container className={\"contactInfo_socialsContainer\"}>\r\n                {Object.keys(resumeData.socials).map((key) => (\r\n                  <Grid item className={\"contactInfo_social\"}>\r\n                    <a href={resumeData.socials[key].link} target={\"_blank\"}>\r\n                      {resumeData.socials[key].icon}\r\n                    </a>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Resume;\r\n","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\Footer\\Footer.js",["72","73"],"import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport resumeData from \"../../utils/resumeData\";\r\n\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className={\"footer\"}>\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">\r\n          {resumeData.name}\r\n          <small> - IoT Engineer & Full Stack Developer</small>\r\n        </Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Background from {\"\"}\r\n          <a href=\"https://www.instagram.com/zs.panda/\" target=\"_blank\">\r\n            Panda ZS\r\n          </a>{\" \"}\r\n          by {\"\"}\r\n          <a href=\"https://www.instagram.com/zina.hendrixx/\" target=\"_blank\">\r\n            Zina Sayari\r\n          </a>\r\n          .{\" \"}\r\n          <Button\r\n            className={\"scrollUp_btn\"}\r\n            onClick={() =>\r\n              window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            <ArrowUpwardIcon />\r\n          </Button>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\CustomTimeline\\CustomTimeline.js",[],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\utils\\resumeData.js",["74"],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\CustomButton\\CustomButton.js",[],"D:\\Collection\\Coding\\Training\\Portfolio\\irad-portfolio\\src\\components\\ScrollToTop\\ScrollToTop.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":22,"column":26,"nodeType":"81","endLine":22,"endColumn":41},{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":4,"column":3,"nodeType":"84","messageId":"85","endLine":4,"endColumn":9},{"ruleId":"82","severity":1,"message":"87","line":5,"column":3,"nodeType":"84","messageId":"85","endLine":5,"endColumn":7},{"ruleId":"82","severity":1,"message":"88","line":6,"column":3,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":9,"column":3,"nodeType":"84","messageId":"85","endLine":9,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":36,"column":33,"nodeType":"92","messageId":"93","endLine":36,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":46,"column":24,"nodeType":"92","messageId":"93","endLine":46,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":55,"column":52,"nodeType":"81","endLine":55,"endColumn":69},{"ruleId":"79","severity":1,"message":"80","line":62,"column":13,"nodeType":"81","endLine":62,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":44,"column":24,"nodeType":"92","messageId":"93","endLine":44,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":53,"column":28,"nodeType":"92","messageId":"93","endLine":53,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":126,"column":15,"nodeType":"81","endLine":126,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":221,"column":60,"nodeType":"81","endLine":221,"endColumn":77},{"ruleId":"79","severity":1,"message":"80","line":21,"column":57,"nodeType":"81","endLine":21,"endColumn":72},{"ruleId":"79","severity":1,"message":"80","line":25,"column":62,"nodeType":"81","endLine":25,"endColumn":77},{"ruleId":"94","severity":1,"message":"95","line":13,"column":1,"nodeType":"96","endLine":514,"endColumn":3},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]